name: Run Tests and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write    

jobs:
  test:
    name: Run Tests
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npm run compile-tests && npm run compile

      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm test

  package-and-release:
    name: Package and Release
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Get version
        id: get_version
        run: |
          version=$(node -p "JSON.parse(require('fs').readFileSync('./package.json', 'utf8')).version")
          echo "version=$version" >> $GITHUB_ENV
          echo $version       

      - name: Install dependencies
        run: npm ci

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package extension
        run: vsce package

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: extension
          path: '**/*.vsix' # Match the file in any subdirectory

      - name: Delete existing release (if any)
        run: |
          gh release delete v${{ env.version }} -y || true
          git tag -d v${{ env.version }} || true
          git push origin :refs/tags/v${{ env.version }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.version }}
          release_name: Release v${{ env.version }}
          draft: false
          prerelease: false
          body: |
            ### What's Changed
            - Automated release via GitHub Actions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          files: '**/*.vsix'
